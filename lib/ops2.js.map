{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/ops2.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\nglobalThis.log = console.log\nglobalThis.debug = console.debug\n\n\n\n\n\n#===========================================================================================================\nclass Column\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( ø_iframe, ø_slug ) ->\n    @_ø_iframe  = ø_iframe\n    @first_slug = ø_slug.value\n    @top        = ø_slug.value.rectangle.top\n    @height     = 0\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  scroll_to_first_line: ->\n    @_ø_iframe.window.scrollTo { top: @top, }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  set_height_from_slug: ( ø_slug ) ->\n    @height = ø_slug.value.rectangle.bottom - @top\n    return @height\n\n\n#===========================================================================================================\nclass Walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( iterator, stop = null ) ->\n    @_iterator  = iterator\n    @_stop      = stop\n    @done       = false\n    @value      = stop\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  step: ->\n    { value, done, } = @_iterator.next()\n    if done\n      @done   = true\n      @value  = @_stop\n      return @_stop\n    @value = value\n    return value\n\n\n#===========================================================================================================\nclass Node_walker extends Walker\nclass Slug_walker extends Walker\n\n\n#===========================================================================================================\nclass Iframe_walker extends Walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( iterator, stop = null ) ->\n    super iterator, stop\n    @height                 = null\n    # @galley_document        = null\n    @window                 = null\n    @draw_box               = null\n    @draw_line_cover        = null\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  step: ->\n    super()\n    return @_stop if @done\n    @height                 = µ.DOM.get_height @value\n    # @galley_document        = @value.contentDocument\n    @window                 = @value.contentWindow\n    ### TAINT may want to return `linefinder` itself ###\n    local_linefinder        = new @value.contentWindow.µ.LINEFINDER.Linefinder()\n    @draw_box               = local_linefinder.draw_box.bind            local_linefinder\n    @draw_line_cover        = local_linefinder.xxx_draw_line_cover.bind local_linefinder\n    return @value\n\n\n#===========================================================================================================\nclass TMP_to_be_named\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: () ->\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  distribute_lines: () ->\n    #.......................................................................................................\n    if µ.DOM.page_is_inside_iframe()\n      log '^123-9^', \"leaving b/c document is loaded in iframe\"\n      return null\n    #.......................................................................................................\n    _iframes = µ.DOM.select_all 'iframe'\n    unless _iframes.length > 0\n      log '^123-10^', \"leaving b/c document does not have iframes\"\n      return null\n    #.......................................................................................................\n    ### Allow user-scrolling for demo ###\n    # µ.DOM.set ø_iframe.value, 'scrolling', 'true' for ø_iframe.value in µ.DOM.select_all 'ø_iframe.value'\n    #.......................................................................................................\n    ø_iframe          = new Iframe_walker _iframes.values()\n    ø_iframe.step()\n    _nodes            = ø_iframe.window.µ.DOM.select_all 'galley > p'\n    ø_node            = new Node_walker _nodes.values()\n    linefinder        = new ø_iframe.window.µ.LINEFINDER.Linefinder()\n    column            = null\n    #.......................................................................................................\n    loop\n      break if ø_iframe.done\n      #.....................................................................................................\n      unless ø_node.step()? # might want to mark galleys without content at this point\n        log '^123-1^', \"nodes done\"; break\n      #.....................................................................................................\n      ø_slug = new Slug_walker linefinder.walk_slugs_of_node ø_node.value\n      loop\n        unless ø_slug.step()?\n          log '^123-1^', \"slugs done\"; break\n        #...................................................................................................\n        unless column?.first_slug?\n          column = new Column ø_iframe, ø_slug\n          column.scroll_to_first_line()\n        #...................................................................................................\n        column.set_height_from_slug ø_slug\n        if ø_iframe.height > column.height\n          ø_iframe.draw_box ø_slug.value.rectangle\n          continue\n        #...................................................................................................\n        ø_iframe.draw_line_cover ø_slug.value.rectangle\n        column    = null\n        unless ø_iframe.step()?\n          log '^123-1^', \"iframes done\"; break\n        ø_iframe.draw_box ø_slug.value.rectangle\n        column = new Column ø_iframe, ø_slug\n        column.scroll_to_first_line()\n    #.......................................................................................................\n    return null\n\n\n#===========================================================================================================\nµ.DOM.ready ->\n  log '^123-8^', \"ready\"\n  tmp_to_be_named = new TMP_to_be_named()\n  tmp_to_be_named.distribute_lines()\n  return null\n\n\n\n###\n  button  = µ.DOM.select_first '#redraw'\n  µ.DOM.on button, 'click', ->\n    debug '^123-14^', \"redraw\"\n    draw_client_rectangles()\n  return null\n###\n\n\n\n"
  ]
}