{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/ops2.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\nglobalThis.log = console.log\nglobalThis.debug = console.debug\n\n\n\n#===========================================================================================================\nnext_node   = ( walker ) -> walker.next()\nnext_slug   = ( walker ) -> walker.next()\nnext_iframe = ( walker ) ->\n  d = walker.next()\n  return d if d.done\n  d.height                  = µ.DOM.get_height d.value\n  d.galley_document         = d.value.contentDocument\n  d.galley_window           = d.value.contentWindow\n  ### TAINT may want to return `linefinder` itself ###\n  local_linefinder          = new d.value.contentWindow.µ.LINEFINDER.Linefinder()\n  d.galley_draw_box         = local_linefinder.draw_box.bind            local_linefinder\n  d.galley_draw_line_cover  = local_linefinder.xxx_draw_line_cover.bind local_linefinder\n  return d\n\n#===========================================================================================================\nclass Column\n  constructor: ( first_slug ) ->\n    @first_slug = first_slug\n    @top        = first_slug.rectangle.top\n    @height     = 0\n    return undefined\n\n#===========================================================================================================\nµ.DOM.ready ->\n  log '^123-8^', \"ready\"\n  #.........................................................................................................\n  if µ.DOM.page_is_inside_iframe()\n    log '^123-9^', \"leaving b/c document is loaded in iframe\"\n    return null\n  #.........................................................................................................\n  iframes = µ.DOM.select_all 'iframe'\n  unless iframes.length > 0\n    log '^123-10^', \"leaving b/c document does not have iframes\"\n    return null\n  #.........................................................................................................\n  ### Allow user-scrolling for demo ###\n  # µ.DOM.set ø_iframe.value, 'scrolling', 'true' for ø_iframe.value in µ.DOM.select_all 'ø_iframe.value'\n  #.........................................................................................................\n  iframe_walker     = iframes.values()\n  ø_iframe          = next_iframe iframe_walker\n  node_walker       = ( ø_iframe.galley_document.querySelectorAll 'galley > p' ).values()\n  linefinder        = new ø_iframe.galley_window.µ.LINEFINDER.Linefinder()\n  column            = null\n  #.........................................................................................................\n  loop\n    break if ø_iframe.done\n    ø_node = next_node node_walker\n    #.......................................................................................................\n    if ø_node.done # might want to mark galleys without content at this point\n      log '^123-1^', \"nodes done\"; break\n    #.......................................................................................................\n    slug_walker       = linefinder.walk_slugs_of_node ø_node.value\n    loop\n      ø_slug = next_slug slug_walker\n      if ø_slug.done\n        log '^123-1^', \"slugs done\"; break\n      #.......................................................................................................\n      unless column?.first_slug?\n        column = new Column ø_slug.value\n        ø_iframe.galley_window.scrollTo { top: column.top, }\n      #.......................................................................................................\n      column.height = ø_slug.value.rectangle.bottom - column.top\n      if ø_iframe.height > column.height\n        ø_iframe.galley_draw_box ø_slug.value.rectangle\n        continue\n      #.......................................................................................................\n      ø_iframe.galley_draw_line_cover ø_slug.value.rectangle\n      ø_iframe  = next_iframe iframe_walker\n      column    = null\n      unless ø_iframe.done\n        ø_iframe.galley_draw_box ø_slug.value.rectangle\n      else\n        log '^123-1^', \"iframes done\"; break\n      column = new Column ø_slug.value\n      ø_iframe.galley_window.scrollTo { top: column.top, }\n  return null\n\n\n\n###\n  button  = µ.DOM.select_first '#redraw'\n  µ.DOM.on button, 'click', ->\n    debug '^123-14^', \"redraw\"\n    draw_client_rectangles()\n  return null\n###\n\n\n\n"
  ]
}