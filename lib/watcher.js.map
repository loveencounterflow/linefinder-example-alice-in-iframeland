{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/watcher.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'GUY/temp/tests'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\n# { freeze }                = require 'letsfreezethat'\n# H                         = require './helpers'\n# types                     = new ( require 'intertype' ).Intertype()\n# { isa\n#   declare\n#   type_of\n#   validate\n#   equals }                = types\n{ Pipeline\n  $         }             = require 'moonriver'\n{ after\n  defer\n  sleep }                 = GUY.async\n\n\n#===========================================================================================================\nclass My_watcher extends GUY.watch.Watcher\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( pipeline ) ->\n    super()\n    @pipeline = pipeline\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  on_all: ( key, path ) ->\n    whisper '^858-1^', 'my_watcher', key, path\n    @pipeline.send { key, path, }\n    null for d from @pipeline.walk()\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = -> new Promise ( resolve, reject ) =>\n  project_path = PATH.dirname __dirname\n  return resolve()\n  #.......................................................................................................\n  new_path_1        = PATH.join folder_path, 'new_1.txt'\n  new_folder_path   = PATH.join folder_path, 'sub'\n  new_path_2        = PATH.join folder_path, 'sub/new_2.txt'\n  new_glob          = PATH.join folder_path, '**/*'\n  #.......................................................................................................\n  pipeline        = new Pipeline()\n  pipeline.push ( d ) -> warn '^858-4^', 'pipeline', d\n  pipeline.push ( d ) ->\n    return null unless d.key in [ 'add', 'change', ]\n    help '^858-4^', 'pipeline: changed:', d.path\n  watcher         = new My_watcher pipeline\n  watcher.add_path new_glob\n  #.......................................................................................................\n  # await sleep 0.25\n  FS.writeFileSync new_path_1, 'helo'\n  FS.mkdirSync new_folder_path\n  FS.writeFileSync new_path_2, 'helo'\n  await sleep 0.25\n  FS.writeFileSync new_path_1, 'sfhsoifhas'\n  FS.writeFileSync new_path_2, 'helo'\n  await sleep 0.25\n  FS.writeFileSync new_path_2, 'helo'\n  FS.rmSync new_path_2\n  FS.rmdirSync new_folder_path\n  after 0.25, =>\n    debug '^858-5^', \"stopping watcher\"\n    await watcher.stop()\n    debug '^858-6^', \"removing #{folder_path}\"\n    rm?()\n    resolve()\n    # return null\n  return null\n  #.........................................................................................................\n  resolve()\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_zx = ->\n  #.........................................................................................................\n  { $ } = await import( 'zx' )\n  $\"\"\"date +\"%Y-%m-%d %H:%M:%S\";\"\"\"\n  $\"\"\"echo 'pandoc ./playlist.md'\"\"\"\n  $\"\"\"pandoc -o ./tmp/playlist.html ./playlist.md\"\"\"\n  $\"\"\"echo '<!DOCTYPE html>' | cat - ./tmp/playlist.html > ./public/playlist.html\"\"\"\n  $\"\"\"trash ./tmp/playlist.html\"\"\"\n  #.........................................................................................................\n  return null\n\n\n############################################################################################################\nif require.main is module then do =>\n  # await demo()\n  await demo_zx()\n\n"
  ]
}