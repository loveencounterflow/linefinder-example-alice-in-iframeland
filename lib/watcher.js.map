{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/watcher.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'GUY/temp/tests'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\n# { freeze }                = require 'letsfreezethat'\n# H                         = require './helpers'\n# types                     = new ( require 'intertype' ).Intertype()\n# { isa\n#   declare\n#   type_of\n#   validate\n#   equals }                = types\n{ Pipeline\n  $         }             = require 'moonriver'\n{ after\n  defer\n  sleep }                 = GUY.async\n#...........................................................................................................\nG                         = {}\ndo ->\n  G.project_path  = PATH.dirname __dirname\n  G.tmp_path      = PATH.join G.project_path, 'tmp'\n  G.public_path   = PATH.join G.project_path, 'public'\n\n\n#===========================================================================================================\nxxx =\n\n  #---------------------------------------------------------------------------------------------------------\n  $log_all: -> ( d ) => whisper GUY.datetime.now(), '^858-4^', 'pipeline', d\n\n  #---------------------------------------------------------------------------------------------------------\n  $add_as_change: -> ( d, send ) =>\n    send d unless d.key is 'add'\n    d.key = 'change'\n    send d\n\n  #---------------------------------------------------------------------------------------------------------\n  $add_file_info: -> ( d, send ) =>\n    return send d unless d.path?\n    d.filename  = PATH.basename d.path\n    d.extension = PATH.extname d.filename\n    send d\n\n  #---------------------------------------------------------------------------------------------------------\n  $html_from_md: -> ( d, send ) =>\n    return send d unless d.key is 'change'\n    return send d unless d.extension is '.md'\n    #.......................................................................................................\n    { zx }      = await import( 'zx' )\n    source_path = d.path\n    tmp_path    = PATH.join G.tmp_path,     d.filename\n    public_path = PATH.join G.public_path,  d.filename\n    help GUY.datetime.now(), '^858-4^', '$html_from_md', source_path, tmp_path, public_path\n    await zx\"\"\"\n      date +\"%Y-%m-%d %H:%M:%S\"\n      pandoc -o #{tmp_path} #{source_path}\n      echo '<!DOCTYPE html>' | cat - #{tmp_path} > #{public_path}\n      trash #{tmp_path}\"\"\"\n    #.......................................................................................................\n    return null\n\n#===========================================================================================================\ncreate_pipeline = ->\n  pipeline        = new Pipeline()\n  # pipeline.push ( d ) -> warn GUY.datetime.now(), '^858-4^', 'pipeline', d\n  pipeline.push xxx.$log_all()\n  pipeline.push xxx.$add_as_change()\n  pipeline.push xxx.$add_file_info()\n  # pipeline.push xxx.$log_all()\n  pipeline.push xxx.$html_from_md()\n  return pipeline\n\n\n#===========================================================================================================\nclass My_watcher extends GUY.watch.Watcher\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( pipeline ) ->\n    super { ignored: /(^|\\/)\\..|node_modules/, }\n    @pipeline = pipeline\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  on_all: ( key, path ) ->\n    # whisper GUY.datetime.now(), '^858-1^', 'my_watcher', key, path\n    @pipeline.send { key, path, }\n    null for d from @pipeline.walk()\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = -> new Promise ( resolve, reject ) =>\n  watcher           = new My_watcher create_pipeline()\n  watcher.add_path PATH.join G.project_path, 'pages/**/*.md'\n  watcher.add_path PATH.join G.project_path, 'public/**/*.css'\n  watcher.add_path PATH.join G.project_path, 'public/**/*.js'\n  watcher.add_path PATH.join G.project_path, 'public/**/*.html'\n  await after 100, ->\n    return resolve()\n  return\n  #.......................................................................................................\n  new_path_1        = PATH.join folder_path, 'new_1.txt'\n  new_folder_path   = PATH.join folder_path, 'sub'\n  new_path_2        = PATH.join folder_path, 'sub/new_2.txt'\n  #.......................................................................................................\n  # await sleep 0.25\n  FS.writeFileSync new_path_1, 'helo'\n  FS.mkdirSync new_folder_path\n  FS.writeFileSync new_path_2, 'helo'\n  await sleep 0.25\n  FS.writeFileSync new_path_1, 'sfhsoifhas'\n  FS.writeFileSync new_path_2, 'helo'\n  await sleep 0.25\n  FS.writeFileSync new_path_2, 'helo'\n  FS.rmSync new_path_2\n  FS.rmdirSync new_folder_path\n  after 0.25, =>\n    debug GUY.datetime.now(), '^858-5^', \"stopping watcher\"\n    await watcher.stop()\n    debug GUY.datetime.now(), '^858-6^', \"removing #{folder_path}\"\n    rm?()\n    resolve()\n    # return null\n  return null\n  #.........................................................................................................\n  resolve()\n\n\n############################################################################################################\nif require.main is module then do =>\n  await demo()\n  # await demo_zx()\n\n"
  ]
}