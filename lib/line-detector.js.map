{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/line-detector.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n#-----------------------------------------------------------------------------------------------------------\n# source_elements = ( document.querySelector '.sample' ).childNodes\n{ log\n  warn\n  debug }       = console\nafter           = ( dts, f  ) => new Promise ( resolve ) => setTimeout  ( -> resolve f() ), dts * 1000\n# sleep           = ( dts     ) -> debug '^2-1^'; new Promise ( resolve ) => debug '^2-2^'; setTimeout  resolve,            dts * 1000\n# defer           = ( f = ->  ) => await sleep 0; return await f()\n\n#-----------------------------------------------------------------------------------------------------------\nremove_boxes = ->\n  element.remove() for element in document.querySelectorAll '.box'\n  return null\n\n\n#===========================================================================================================\nclass Linefinder\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  draw_box: ( rectangle ) ->\n    box               = document.createElement 'div'\n    box.style.top     = document.documentElement.scrollTop  + rectangle.top       + 'px'\n    box.style.left    = document.documentElement.scrollLeft + rectangle.left      + 'px'\n    box.style.width   =                                       rectangle.width - 1 + 'px' # collapse borders\n    box.style.height  =                                       rectangle.height    + 'px'\n    box.classList.add 'box'\n    document.body.appendChild box\n    return box\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_next_chr_rectangles: ( node, c1, c2 ) ->\n    TraverseUtil.getNextChar c1, c2, [], false\n    selection   = TraverseUtil.setSelection c1, c2\n    range       = selection.getRangeAt 0\n    return null unless node.contains range.startContainer.parentNode\n    return null unless node.contains range.endContainer.parentNode\n    return range.getClientRects()\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_chr_rectangles_of_node: ( node ) ->\n    text_node     = node.childNodes[ 0 ]\n    c1            = new Cursor text_node, 0, text_node.data\n    c2            = new Cursor text_node, 0, text_node.data\n    TraverseUtil.setSelection c1, c2\n    loop\n      rectangles = @_get_next_chr_rectangles node, c1, c2\n      break unless rectangles?\n      yield from rectangles\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _reset_line_walker: ( s ) ->\n    s.min_top       = +Infinity\n    s.max_bottom    = -Infinity\n    s.min_left      = +Infinity\n    s.max_right     = -Infinity\n    s.avg_height    = 0\n    s.avg_bottom    = 0\n    s.count         = 0\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_line_rectangles_of_node: ( node ) ->\n    @_reset_line_walker s  = {}\n    xxx_height_factor     = 1 / 2 ### relative minimum height to recognize line step ###\n    for rectangle from @walk_chr_rectangles_of_node node\n      if s.count > 0 and rectangle.bottom - s.avg_bottom > s.avg_height * xxx_height_factor\n        yield new DOMRect             \\\n          s.min_left,                 \\   # left\n          s.min_top,                  \\   # top\n          s.max_right   - s.min_left, \\   # width\n          s.max_bottom  - s.min_top       # height\n        @_reset_line_walker s\n      #.......................................................................................................\n      # draw_box rectangle\n      s.count++\n      s.min_top     = Math.min s.min_top,     rectangle.top\n      s.max_bottom  = Math.max s.max_bottom,  rectangle.bottom\n      s.min_left    = Math.min s.min_left,    rectangle.left\n      s.max_right   = Math.max s.max_right,   rectangle.right\n      s.avg_height  = ( s.avg_height * ( s.count - 1 ) / s.count ) + ( rectangle.height * 1 / s.count )\n      s.avg_bottom  = ( s.avg_bottom * ( s.count - 1 ) / s.count ) + ( rectangle.bottom * 1 / s.count )\n    #.........................................................................................................\n    if s.count > 0\n      yield new DOMRect             \\\n        s.min_left,                 \\   # left\n        s.min_top,                  \\   # top\n        s.max_right   - s.min_left, \\   # width\n        s.max_bottom  - s.min_top       # height\n    return null\n\n#===========================================================================================================\nµ.DOM.ready ->\n  log '^123-7^', \"ready\"\n  nodes         = µ.DOM.select_all 'p'\n  rectangles    = []\n  linefinder    = new Linefinder()\n  for node in nodes\n    for rectangle from linefinder.walk_line_rectangles_of_node node\n      rectangles.push rectangle\n      linefinder.draw_box rectangle\n  ref_top = document.documentElement.scrollTop\n  dt      = 0.5\n  idx     = -1\n  scroll = ->\n    idx++\n    return null unless ( rectangle = rectangles[ idx ] )?\n    top = ref_top + rectangle.top\n    # debug \"scrolling to #{top.toFixed 0}px\"\n    await window.scrollTo { top, behavior: 'smooth', }\n    after dt, scroll\n  window.scrollTo { top: 0, behavior: 'smooth', }\n  after 1, scroll\n  return null\n\n\n\n\n\n\n"
  ]
}