{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/line-detector.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n#-----------------------------------------------------------------------------------------------------------\n# source_elements = ( document.querySelector '.sample' ).childNodes\n{ log\n  warn\n  debug }       = console\n# after           = ( dts, f  ) => new Promise ( resolve ) => setTimeout  ( -> resolve f() ), dts * 1000\n# sleep           = ( dts     ) -> debug '^2-1^'; new Promise ( resolve ) => debug '^2-2^'; setTimeout  resolve,            dts * 1000\n# defer           = ( f = ->  ) => await sleep 0; return await f()\n\n#-----------------------------------------------------------------------------------------------------------\nremove_boxes = ->\n  element.remove() for element in document.querySelectorAll '.box'\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndraw_boxes = ( rectangles ) ->\n  return ( draw_box rectangle for rectangle in rectangles )\n\n#-----------------------------------------------------------------------------------------------------------\ndraw_box = ( rectangle ) ->\n  box               = document.createElement 'div'\n  box.style.top     = document.documentElement.scrollTop  + rectangle.y       + 'px'\n  box.style.left    = document.documentElement.scrollLeft + rectangle.x       + 'px'\n  box.style.width   =                                       rectangle.width - 1   + 'px' # collapse borders\n  box.style.height  =                                       rectangle.height  + 'px'\n  box.classList.add 'box'\n  document.body.appendChild box\n  return box\n\n#-----------------------------------------------------------------------------------------------------------\nselect_next_chr = ( c1, c2, nodes_crossed, node ) ->\n  TraverseUtil.getNextChar c1, c2, nodes_crossed, false\n  selection   = TraverseUtil.setSelection c1, c2\n  range       = selection.getRangeAt 0\n  return null unless node.contains range.startContainer.parentNode\n  return null unless node.contains range.endContainer.parentNode\n  rectangles  = range.getClientRects()\n  return rectangles\n\n#-----------------------------------------------------------------------------------------------------------\nwalk_chr_rectangles_of_node = ( node ) ->\n  text_node     = node.childNodes[ 0 ]\n  c1            = new Cursor text_node, 0, text_node.data\n  c2            = new Cursor text_node, 0, text_node.data\n  TraverseUtil.setSelection c1, c2\n  loop\n    rectangles = select_next_chr c1, c2, [], node\n    break unless rectangles?\n    yield rectangle for rectangle in rectangles\n  return null\n\n#===========================================================================================================\nµ.DOM.ready ->\n  log '^123-7^', \"ready\"\n  nodes         = µ.DOM.select_all '#p5'\n  node          = nodes[ 0 ]\n  for rectangle from walk_chr_rectangles_of_node node\n    box = draw_box rectangle\n  return null\n\n\n\n\n\n\n"
  ]
}