{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/line-detector.coffee"
  ],
  "names": [],
  "mappings": "AAEmE;EAAA;;AAAA,MAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,YAAA,EAAA;;EACnE,CAAA,CAAE,GAAF,EACE,IADF,EAEE,KAFF,CAAA,GAEkB,OAFlB;;EAGA,KAAA,GAAkB,CAAE,GAAF,EAAO,CAAP,CAAA,GAAA;WAAe,IAAI,OAAJ,CAAY,CAAE,OAAF,CAAA,GAAA;aAAe,UAAA,CAAY,CAAE,QAAA,CAAA,CAAA;eAAG,OAAA,CAAQ,CAAA,CAAA,CAAR;MAAH,CAAF,CAAZ,EAAgC,GAAA,GAAM,IAAtC;IAAf,CAAZ;EAAf,EAJiD;;;;;;EASnE,YAAA,GAAe,QAAA,CAAA,CAAA;AACf,QAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA;AAAE;IAAA,KAAA,qCAAA;;MAAA,OAAO,CAAC,MAAR,CAAA;IAAA;AACA,WAAO;EAFM,EAToD;;;EAcnE,CAAC,CAAC,GAAG,CAAC,KAAN,CAAY,QAAA,CAAA,CAAA;AACZ,QAAA,EAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,IAAA,EAAA,KAAA,EAAA,SAAA,EAAA,UAAA,EAAA,GAAA,EAAA,OAAA,EAAA;IAAE,GAAA,CAAI,SAAJ,EAAe,OAAf,EAAF;;;IAGE,KAAA,GAAgB,CAAC,CAAC,GAAG,CAAC,UAAN,CAAiB,GAAjB;IAChB,UAAA,GAAgB;IAChB,UAAA,GAAgB,IAAI,CAAC,CAAC,UAAU,CAAC,UAAjB,CAAA;IAChB,KAAA,uCAAA;;AACE;MAAA,KAAA,gBAAA;QACE,UAAU,CAAC,IAAX,CAAgB,SAAhB;QACA,UAAU,CAAC,QAAX,CAAoB,SAApB;MAFF;IADF;IAIA,OAAA,GAAU,QAAQ,CAAC,eAAe,CAAC;IACnC,EAAA,GAAU;IACV,GAAA,GAAU,CAAC;IACX,MAAA,GAAS,MAAA,QAAA,CAAA,CAAA;AACX,UAAA;MAAI,GAAA;MACA,IAAmB,qCAAnB;AAAA,eAAO,KAAP;;MACA,GAAA,GAAM,OAAA,GAAU,SAAS,CAAC,IAF9B;;MAII,MAAM,MAAM,CAAC,QAAP,CAAgB;QAAE,GAAF;QAAO,QAAA,EAAU;MAAjB,CAAhB;aACN,KAAA,CAAM,EAAN,EAAU,MAAV;IANO;IAOT,MAAM,CAAC,QAAP,CAAgB;MAAE,GAAA,EAAK,CAAP;MAAU,QAAA,EAAU;IAApB,CAAhB;IACA,KAAA,CAAM,CAAN,EAAS,MAAT;AACA,WAAO;EAvBG,CAAZ;AAdmE",
  "sourcesContent": [
    "\n#-----------------------------------------------------------------------------------------------------------\n# source_elements = ( document.querySelector '.sample' ).childNodes\n{ log\n  warn\n  debug }       = console\nafter           = ( dts, f  ) => new Promise ( resolve ) => setTimeout  ( -> resolve f() ), dts * 1000\n# sleep           = ( dts     ) -> debug '^2-1^'; new Promise ( resolve ) => debug '^2-2^'; setTimeout  resolve,            dts * 1000\n# defer           = ( f = ->  ) => await sleep 0; return await f()\n\n#-----------------------------------------------------------------------------------------------------------\nremove_boxes = ->\n  element.remove() for element in document.querySelectorAll '.box'\n  return null\n\n#===========================================================================================================\nµ.DOM.ready ->\n  log '^123-7^', \"ready\"\n  # log '^123-7^', Object.keys µ\n  # log '^123-7^', µ.Linefinder\n  nodes         = µ.DOM.select_all 'p'\n  rectangles    = []\n  linefinder    = new µ.LINEFINDER.Linefinder()\n  for node in nodes\n    for rectangle from linefinder.walk_line_rectangles_of_node node\n      rectangles.push rectangle\n      linefinder.draw_box rectangle\n  ref_top = document.documentElement.scrollTop\n  dt      = 0.5\n  idx     = -1\n  scroll = ->\n    idx++\n    return null unless ( rectangle = rectangles[ idx ] )?\n    top = ref_top + rectangle.top\n    # debug \"scrolling to #{top.toFixed 0}px\"\n    await window.scrollTo { top, behavior: 'smooth', }\n    after dt, scroll\n  window.scrollTo { top: 0, behavior: 'smooth', }\n  after 1, scroll\n  return null\n\n\n\n\n\n\n"
  ]
}